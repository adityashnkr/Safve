{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya\\\\Desktop\\\\Stonkerbois\\\\safve\\\\src\\\\components\\\\quiz.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  const questions = [{\n    questionText: 'How expensive is the cheapest Starbucks Cofee?',\n    answerOptions: [{\n      answerText: 'Free!',\n      isCorrect: false\n    }, {\n      answerText: '0.20$',\n      isCorrect: false\n    }, {\n      answerText: '2.25$',\n      isCorrect: true\n    }, {\n      answerText: '10$',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'How much will it cost you to make your own coffee?',\n    answerOptions: [{\n      answerText: '20$',\n      isCorrect: false\n    }, {\n      answerText: '0.20$',\n      isCorrect: true\n    }, {\n      answerText: '1$',\n      isCorrect: false\n    }, {\n      answerText: '3$',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'What should you do with the money you save by making coffee at home?',\n    answerOptions: [{\n      answerText: 'Save & Invest!',\n      isCorrect: true\n    }, {\n      answerText: 'Put it in your bank account',\n      isCorrect: false\n    }, {\n      answerText: 'Spend on Starbucks Tea',\n      isCorrect: false\n    }, {\n      answerText: 'Keep it in a piggy bank',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'How many years will it take to be a millionaire by making your coffee at home (for 3 cups a day you save and invest 6$ at a 7% return)?',\n    answerOptions: [{\n      answerText: '55',\n      isCorrect: false\n    }, {\n      answerText: '60',\n      isCorrect: false\n    }, {\n      answerText: '100',\n      isCorrect: false\n    }, {\n      answerText: 'Never',\n      isCorrect: true\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [\"You scored \", score, \" out of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", currentQuestion + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 8\n          }, this), \"/\", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: questions[currentQuestion].questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n          children: answerOption.answerText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Quiz, \"0BtWTSV6WaEEISJY2tt5d47HMss=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/Aditya/Desktop/Stonkerbois/safve/src/components/quiz.jsx"],"names":["React","useState","Quiz","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerOptionClick","nextQuestion","length","map","answerOption"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './quiz.css'\r\nfunction Quiz() {\r\n\tconst questions = [\r\n\t\t{\r\n\t\t\tquestionText: 'How expensive is the cheapest Starbucks Cofee?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Free!', isCorrect: false },\r\n\t\t\t\t{ answerText: '0.20$', isCorrect: false },\r\n\t\t\t\t{ answerText: '2.25$', isCorrect: true },\r\n\t\t\t\t{ answerText: '10$', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'How much will it cost you to make your own coffee?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: '20$', isCorrect: false },\r\n\t\t\t\t{ answerText: '0.20$', isCorrect: true },\r\n\t\t\t\t{ answerText: '1$', isCorrect: false },\r\n\t\t\t\t{ answerText: '3$', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'What should you do with the money you save by making coffee at home?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Save & Invest!', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Put it in your bank account', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Spend on Starbucks Tea', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Keep it in a piggy bank', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'How many years will it take to be a millionaire by making your coffee at home (for 3 cups a day you save and invest 6$ at a 7% return)?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: '55', isCorrect: false },\r\n\t\t\t\t{ answerText: '60', isCorrect: false },\r\n\t\t\t\t{ answerText: '100', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Never', isCorrect: true },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of {questions.length}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}